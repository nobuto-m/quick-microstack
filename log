++ dirname ./redeploy-microstack.sh
+ cd .
+ for i in {1..3}
+ uvt-kvm destroy sunbeam-1.localdomain
+ for i in {1..3}
+ uvt-kvm destroy sunbeam-2.localdomain
+ for i in {1..3}
+ uvt-kvm destroy sunbeam-3.localdomain
+ for i in {1..3}
+ uvt-kvm create --machine-type q35 --cpu 16 --memory 16384 --disk 64 --ephemeral-disk 16 --ephemeral-disk 16 --host-passthrough --unsafe-caching --no-start sunbeam-1.localdomain release=jammy
+ for i in {1..3}
+ uvt-kvm create --machine-type q35 --cpu 16 --memory 16384 --disk 64 --ephemeral-disk 16 --ephemeral-disk 16 --host-passthrough --unsafe-caching --no-start sunbeam-2.localdomain release=jammy
+ for i in {1..3}
+ uvt-kvm create --machine-type q35 --cpu 16 --memory 16384 --disk 64 --ephemeral-disk 16 --ephemeral-disk 16 --host-passthrough --unsafe-caching --no-start sunbeam-3.localdomain release=jammy
+ for i in {1..3}
+ virsh detach-interface sunbeam-1.localdomain network --config
Interface detached successfully

+ virsh attach-interface sunbeam-1.localdomain network virbr-sunbeam --model virtio --config
Interface attached successfully

+ virsh attach-interface sunbeam-1.localdomain network virbr-sunbeam --model virtio --config
Interface attached successfully

+ virsh start sunbeam-1.localdomain
Domain 'sunbeam-1.localdomain' started

+ for i in {1..3}
+ virsh detach-interface sunbeam-2.localdomain network --config
Interface detached successfully

+ virsh attach-interface sunbeam-2.localdomain network virbr-sunbeam --model virtio --config
Interface attached successfully

+ virsh attach-interface sunbeam-2.localdomain network virbr-sunbeam --model virtio --config
Interface attached successfully

+ virsh start sunbeam-2.localdomain
Domain 'sunbeam-2.localdomain' started

+ for i in {1..3}
+ virsh detach-interface sunbeam-3.localdomain network --config
Interface detached successfully

+ virsh attach-interface sunbeam-3.localdomain network virbr-sunbeam --model virtio --config
Interface attached successfully

+ virsh attach-interface sunbeam-3.localdomain network virbr-sunbeam --model virtio --config
Interface attached successfully

+ virsh start sunbeam-3.localdomain
Domain 'sunbeam-3.localdomain' started

+ for i in {1..3}
+ uvt-kvm wait sunbeam-1.localdomain
+ uvt-kvm ssh sunbeam-1.localdomain -- -t sudo snap install openstack --channel 2024.1/edge
openstack (2024.1/edge) 2024.1 from Canonical✓ installed
Connection to 10.0.123.246 closed.
+ uvt-kvm ssh sunbeam-1.localdomain -- 'sunbeam prepare-node-script | bash -x'
++ lsb_release -sc
+ '[' jammy '!=' jammy ']'
++ whoami
+ USER=ubuntu
++ id -u
+ '[' 1000 -eq 0 -o ubuntu = root ']'
+ SUDO_ASKPASS=/bin/false
+ sudo -A whoami
+ sudo grep -r ubuntu /etc/sudoers /etc/sudoers.d
+ grep NOPASSWD:ALL
+ dpkg -s openssh-server
+ sudo usermod --append --groups snap_daemon ubuntu
+ '[' -f /home/ubuntu/.ssh/id_rsa ']'
+ ssh-keygen -b 4096 -f /home/ubuntu/.ssh/id_rsa -t rsa -N ''
Generating public/private rsa key pair.
Your identification has been saved in /home/ubuntu/.ssh/id_rsa
Your public key has been saved in /home/ubuntu/.ssh/id_rsa.pub
The key fingerprint is:
SHA256:yJdIqb3oKrHhFaAnVcIb7zLgRTsgAKj5lTYt6yIAays ubuntu@sunbeam-1
The key's randomart image is:
+---[RSA 4096]----+
|*....            |
|oo+o   .         |
|+o++.oo          |
|B o=B=.o .       |
|o*.+++= S        |
|=o+.o. o         |
|++o+. .          |
|Eo...            |
|.o.o.            |
+----[SHA256]-----+
+ cat /home/ubuntu/.ssh/id_rsa.pub
++ hostname --all-ip-addresses
+ ssh-keyscan -H 10.0.123.246
# 10.0.123.246:22 SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.6
# 10.0.123.246:22 SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.6
# 10.0.123.246:22 SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.6
# 10.0.123.246:22 SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.6
# 10.0.123.246:22 SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.6
+ grep -E 'HTTPS?_PROXY' /etc/environment
+ curl -s -m 10 -x '' api.charmhub.io
+ sudo snap connect openstack:ssh-keys
+ sudo snap install --channel 3.4/stable juju
juju (3.4/stable) 3.4.2 from Canonical** installed
+ mkdir -p /home/ubuntu/.local/share
+ mkdir -p /home/ubuntu/.config/openstack
++ snap list openstack --unicode=never --color=never
++ grep openstack
+ snap_output='openstack  2024.1   506  2024.1/edge  canonical**  -'
++ awk -v col=4 '{print $col}'
+ track=2024.1/edge
+ [[ 2024.1/edge =~ edge ]]
+ risk=edge
+ [[ edge != \s\t\a\b\l\e ]]
You're deploying from edge channel,  to test edge charms, you must provide the edge manifest.
+ echo 'You'\''re deploying from edge channel,' ' to test edge charms, you must provide the edge manifest.'
+ sudo snap set openstack deployment.risk=edge
Snap has been automatically configured to deploy from edge channel.
Override by passing a custom manifest with -m/--manifest.
+ echo 'Snap has been automatically configured to deploy from' 'edge channel.'
+ echo 'Override by passing a custom manifest with -m/--manifest.'
+ uvt-kvm ssh sunbeam-1.localdomain -- sudo ip link set enp9s0 up
+ for i in {1..3}
+ uvt-kvm wait sunbeam-2.localdomain
+ uvt-kvm ssh sunbeam-2.localdomain -- -t sudo snap install openstack --channel 2024.1/edge
openstack (2024.1/edge) 2024.1 from Canonical✓ installed
Connection to 10.0.123.150 closed.
+ uvt-kvm ssh sunbeam-2.localdomain -- 'sunbeam prepare-node-script | bash -x'
++ lsb_release -sc
+ '[' jammy '!=' jammy ']'
++ whoami
+ USER=ubuntu
++ id -u
+ '[' 1000 -eq 0 -o ubuntu = root ']'
+ SUDO_ASKPASS=/bin/false
+ sudo -A whoami
+ sudo grep -r ubuntu /etc/sudoers /etc/sudoers.d
+ grep NOPASSWD:ALL
+ dpkg -s openssh-server
+ sudo usermod --append --groups snap_daemon ubuntu
+ '[' -f /home/ubuntu/.ssh/id_rsa ']'
+ ssh-keygen -b 4096 -f /home/ubuntu/.ssh/id_rsa -t rsa -N ''
Generating public/private rsa key pair.
Your identification has been saved in /home/ubuntu/.ssh/id_rsa
Your public key has been saved in /home/ubuntu/.ssh/id_rsa.pub
The key fingerprint is:
SHA256:kuMGuvxLS/l5TMNuPzEqOgqCNjHRnpG209vx0rVmErA ubuntu@sunbeam-2
The key's randomart image is:
+---[RSA 4096]----+
|                 |
|  . .            |
| . =   .         |
|  + =  .o        |
| o =..+ES. .     |
|. o..+ooB = .    |
|+o. +.o* * *     |
|oo.+.+..B =      |
|  +o=+o+ ...     |
+----[SHA256]-----+
+ cat /home/ubuntu/.ssh/id_rsa.pub
++ hostname --all-ip-addresses
+ ssh-keyscan -H 10.0.123.150
# 10.0.123.150:22 SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.6
# 10.0.123.150:22 SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.6
# 10.0.123.150:22 SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.6
# 10.0.123.150:22 SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.6
# 10.0.123.150:22 SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.6
+ grep -E 'HTTPS?_PROXY' /etc/environment
+ curl -s -m 10 -x '' api.charmhub.io
+ sudo snap connect openstack:ssh-keys
+ sudo snap install --channel 3.4/stable juju
juju (3.4/stable) 3.4.2 from Canonical** installed
+ mkdir -p /home/ubuntu/.local/share
+ mkdir -p /home/ubuntu/.config/openstack
++ snap list openstack --unicode=never --color=never
++ grep openstack
+ snap_output='openstack  2024.1   506  2024.1/edge  canonical**  -'
++ awk -v col=4 '{print $col}'
+ track=2024.1/edge
+ [[ 2024.1/edge =~ edge ]]
+ risk=edge
+ [[ edge != \s\t\a\b\l\e ]]
+ echo 'You'\''re deploying from edge channel,' ' to test edge charms, you must provide the edge manifest.'
You're deploying from edge channel,  to test edge charms, you must provide the edge manifest.
+ sudo snap set openstack deployment.risk=edge
Snap has been automatically configured to deploy from edge channel.
Override by passing a custom manifest with -m/--manifest.
+ echo 'Snap has been automatically configured to deploy from' 'edge channel.'
+ echo 'Override by passing a custom manifest with -m/--manifest.'
+ uvt-kvm ssh sunbeam-2.localdomain -- sudo ip link set enp9s0 up
+ for i in {1..3}
+ uvt-kvm wait sunbeam-3.localdomain
+ uvt-kvm ssh sunbeam-3.localdomain -- -t sudo snap install openstack --channel 2024.1/edge
openstack (2024.1/edge) 2024.1 from Canonical✓ installed
Connection to 10.0.123.151 closed.
+ uvt-kvm ssh sunbeam-3.localdomain -- 'sunbeam prepare-node-script | bash -x'
++ lsb_release -sc
+ '[' jammy '!=' jammy ']'
++ whoami
+ USER=ubuntu
++ id -u
+ '[' 1000 -eq 0 -o ubuntu = root ']'
+ SUDO_ASKPASS=/bin/false
+ sudo -A whoami
+ sudo grep -r ubuntu /etc/sudoers /etc/sudoers.d
+ grep NOPASSWD:ALL
+ dpkg -s openssh-server
+ sudo usermod --append --groups snap_daemon ubuntu
+ '[' -f /home/ubuntu/.ssh/id_rsa ']'
+ ssh-keygen -b 4096 -f /home/ubuntu/.ssh/id_rsa -t rsa -N ''
Generating public/private rsa key pair.
Your identification has been saved in /home/ubuntu/.ssh/id_rsa
Your public key has been saved in /home/ubuntu/.ssh/id_rsa.pub
The key fingerprint is:
SHA256:zCe6qvJc2BKIm8aBpJ8NAbyuP5V3sXxsb+unPpkPkeo ubuntu@sunbeam-3
The key's randomart image is:
+---[RSA 4096]----+
|o                |
| o               |
| .o              |
|=o .   o.    .   |
|*.o  . .S+. o    |
|.=.Bo ..+o+. .   |
|+o=.+... o...o   |
|+..o   . .  *..  |
| +=o...   E+=*.  |
+----[SHA256]-----+
+ cat /home/ubuntu/.ssh/id_rsa.pub
++ hostname --all-ip-addresses
+ ssh-keyscan -H 10.0.123.151
# 10.0.123.151:22 SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.6
# 10.0.123.151:22 SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.6
# 10.0.123.151:22 SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.6
# 10.0.123.151:22 SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.6
# 10.0.123.151:22 SSH-2.0-OpenSSH_8.9p1 Ubuntu-3ubuntu0.6
+ grep -E 'HTTPS?_PROXY' /etc/environment
+ curl -s -m 10 -x '' api.charmhub.io
+ sudo snap connect openstack:ssh-keys
+ sudo snap install --channel 3.4/stable juju
juju (3.4/stable) 3.4.2 from Canonical** installed
+ mkdir -p /home/ubuntu/.local/share
+ mkdir -p /home/ubuntu/.config/openstack
++ snap list openstack --unicode=never --color=never
++ grep openstack
+ snap_output='openstack  2024.1   506  2024.1/edge  canonical**  -'
++ awk -v col=4 '{print $col}'
+ track=2024.1/edge
+ [[ 2024.1/edge =~ edge ]]
+ risk=edge
+ [[ edge != \s\t\a\b\l\e ]]
+ echo 'You'\''re deploying from edge channel,' ' to test edge charms, you must provide the edge manifest.'
You're deploying from edge channel,  to test edge charms, you must provide the edge manifest.
+ sudo snap set openstack deployment.risk=edge
Snap has been automatically configured to deploy from edge channel.
Override by passing a custom manifest with -m/--manifest.
+ echo 'Snap has been automatically configured to deploy from' 'edge channel.'
+ echo 'Override by passing a custom manifest with -m/--manifest.'
+ uvt-kvm ssh sunbeam-3.localdomain -- sudo ip link set enp9s0 up
+ uvt-kvm ssh sunbeam-1.localdomain -- tee deployment_manifest.yaml
deployment:
  proxy:
    proxy_required: false
  bootstrap:
    management_cidr: 10.0.123.0/24
  addons:
    metallb: 10.0.123.81-10.0.123.90
  microceph_config:
    sunbeam-1.localdomain:
      # LP: #2065470, LP: #2065698
      osd_devices: /dev/vdc,/dev/vdd
    sunbeam-2.localdomain:
      osd_devices: /dev/vdc,/dev/vdd
    sunbeam-3.localdomain:
      osd_devices: /dev/vdc,/dev/vdd
  external_network:
    nic: enp9s0
    cidr: 10.0.123.0/24
    gateway: 10.0.123.1
    start: 10.0.123.51
    end: 10.0.123.80
    network_type: flat  # or vlan
    #segmentation_id:
  user:
    remote_access_location: remote
    run_demo_setup: true
    username: demo
    password: demo
    cidr: 192.168.1.0/24
    nameservers: 10.0.123.1
    security_group_rules: true
software:
  juju:
    bootstrap_args:
      - --debug
      - --model-default=test-mode=true
      - --model-default=disable-telemetry=true
      # LP: #2065490
      - --model-default=logging-config=<root>=INFO;unit=DEBUG
      # LP: #2065700
      - --model-default=ignore-machine-addresses=true
+ uvt-kvm ssh sunbeam-1.localdomain -- 'tail -n+2 /snap/openstack/current/etc/manifests/edge.yml >> deployment_manifest.yaml'
+ uvt-kvm ssh sunbeam-1.localdomain -- -t time sunbeam cluster bootstrap --manifest deployment_manifest.yaml --role control --role compute --role storage
Node has been bootstrapped with roles: control, compute, storage

real    21m13.010s
user    1m30.568s
sys     0m18.256s
Connection to 10.0.123.246 closed.
+ uvt-kvm ssh sunbeam-1.localdomain -- 'juju model-default --cloud sunbeam-microk8s logging-config="<root>=INFO;unit=DEBUG"'
+ uvt-kvm ssh sunbeam-1.localdomain -- 'juju model-config -m openstack logging-config="<root>=INFO;unit=DEBUG"'
++ uvt-kvm ssh sunbeam-1.localdomain -- sunbeam cluster add --name sunbeam-2.localdomain -f value
+ uvt-kvm ssh sunbeam-2.localdomain -- -t time sunbeam cluster join --role control --role compute --role storage --token eyJuYW1lIjoic3VuYmVhbS0yLmxvY2FsZG9tYWluIiwic2VjcmV0IjoiNzIwYzBiYjAyODEyMmYwMjBhNTMzZjI3YzQ4ZjkzYzAwZmU0NzY3Nzk4YWQ2NTcxNzMzNzBkNGQwOGRjMDI3NSIsImZpbmdlcnByaW50IjoiMmQ1ZmZmNTkwNmQ5YWIzZmJmNjNhYTk0ZmE3MDAzYTI2MmVjNTA0MWU3OTAyYTBhOTc2NzAwZDY4ZGY4OTIxZiIsImpvaW5fYWRkcmVzc2VzIjpbIjEwLjAuMTIzLjI0Njo3MDAwIl19
⠇ Adding Openstack Hypervisor unit to machine(s) ... Task was destroyed but it is pending!
task: <Task pending name='Task-59' coro=<Connection._pinger.<locals>._do_ping() running at /snap/openstack/506/lib/python3.10/site-packages/juju/client/connection.py:602> wait_for=<Future pending cb=[Task.task_wakeup()]> cb=[create_task_with_handler.<locals>._task_result_exp_handler(task_name='tmp', logger=<Logger juju....ction (ERROR)>)() at /snap/openstack/506/lib/python3.10/site-packages/juju/jasyncio.py:39]>
Task tmp raised an exception: cannot reuse already awaited coroutine
Traceback (most recent call last):
  File "/snap/openstack/506/lib/python3.10/site-packages/juju/jasyncio.py", line 41, in _task_result_exp_handler
    task.result()
RuntimeError: cannot reuse already awaited coroutine
Node joined cluster with roles: control, compute, storage

real    25m3.417s
user    0m33.003s
sys     0m4.996s
Connection to 10.0.123.150 closed.
++ uvt-kvm ssh sunbeam-1.localdomain -- sunbeam cluster add --name sunbeam-3.localdomain -f value
+ uvt-kvm ssh sunbeam-3.localdomain -- -t time sunbeam cluster join --role control --role compute --role storage --token eyJuYW1lIjoic3VuYmVhbS0zLmxvY2FsZG9tYWluIiwic2VjcmV0IjoiYTdjNzkwNmQ2MWU3Y2Y3NTFhYzI4ZmVkMjQxM2FmMzEwZjMyOTNlMTU3MjM1NDU4MWVlYWI0Nzk2NGNhMWE3ZCIsImZpbmdlcnByaW50IjoiMmQ1ZmZmNTkwNmQ5YWIzZmJmNjNhYTk0ZmE3MDAzYTI2MmVjNTA0MWU3OTAyYTBhOTc2NzAwZDY4ZGY4OTIxZiIsImpvaW5fYWRkcmVzc2VzIjpbIjEwLjAuMTIzLjE1MDo3MDAwIiwiMTAuMC4xMjMuMjQ2OjcwMDAiXX0=
Node joined cluster with roles: control, compute, storage

real    27m28.257s
user    0m33.871s
sys     0m5.057s
Connection to 10.0.123.151 closed.
+ uvt-kvm ssh sunbeam-1.localdomain -- -t time sunbeam cluster resize
Resize complete.

real    32m55.238s
user    2m41.209s
sys     0m16.995s
Connection to 10.0.123.246 closed.
+ uvt-kvm ssh sunbeam-1.localdomain -- -t time sunbeam configure --openrc demo-openrc --manifest deployment_manifest.yaml
⠋ Generating openrc for cloud admin usage ... Writing openrc to demo-openrc ... done

real    3m30.742s
user    0m9.527s
sys     0m10.507s
Connection to 10.0.123.246 closed.
+ uvt-kvm ssh sunbeam-1.localdomain -- -t 'time sunbeam openrc > admin-openrc'

real    0m11.547s
user    0m3.076s
sys     0m1.645s
Connection to 10.0.123.246 closed.
+ uvt-kvm ssh sunbeam-1.localdomain -- -t time sunbeam launch ubuntu --name test
Launching an OpenStack instance ... 
Access instance with `ssh -i /home/ubuntu/snap/openstack/506/sunbeam ubuntu@10.0.123.69`

real    1m13.650s
user    0m4.103s
sys     0m0.758s
Connection to 10.0.123.246 closed.

real    115m57.611s
user    0m15.723s
sys     0m9.306s
